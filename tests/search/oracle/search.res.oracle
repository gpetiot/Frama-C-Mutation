[kernel] preprocessing with "gcc -C -E -I.  tests/search/search.c"
[mut:progress] 13 mutants
[mut:progress] mutant 0 tests/search/search.c:16: (+) --> (%)
[mut:mutant] mutant 0:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i %= 1;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 1 tests/search/search.c:16: (+) --> (/)
[mut:mutant] mutant 1:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i /= 1;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 2 tests/search/search.c:16: (+) --> (*)
[mut:mutant] mutant 2:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i *= 1;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 3 tests/search/search.c:16: (+) --> (-)
[mut:mutant] mutant 3:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i --;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 4 tests/search/search.c:17: (+) --> (-)
[mut:mutant] mutant 4:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t - i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 5 tests/search/search.c:17: (==) --> (!=)
[mut:mutant] mutant 5:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) != x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 6 tests/search/search.c:17: *(t + i) == x --> ! (*(t + i) == x)
[mut:mutant] mutant 6:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (! (*(t + i) == x)) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 7 tests/search/search.c:16: (<=) --> (<)
[mut:mutant] mutant 7:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i < 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 8 tests/search/search.c:16: (<=) --> (!=)
[mut:mutant] mutant 8:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i != 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 9 tests/search/search.c:16: (<=) --> (==)
[mut:mutant] mutant 9:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i == 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 10 tests/search/search.c:16: (<=) --> (>=)
[mut:mutant] mutant 10:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i >= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 11 tests/search/search.c:16: (<=) --> (>)
[mut:mutant] mutant 11:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i > 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 12 tests/search/search.c:16: i <= 4 --> ! (i <= 4)
[mut:mutant] mutant 12:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (! (i <= 4)) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


