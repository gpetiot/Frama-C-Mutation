[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/search/search.c (with preprocessing)
[mut:progress] 54 mutants
[mut:progress] mutant 0 tests/search/search.c:6: `+` --> `-`
[mut:mutant] mutant 0:
/* Generated by Frama-C */
/*@ requires \valid(t-(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 1 tests/search/search.c:21: `+` --> `-`
[mut:mutant] mutant 1:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t-i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 2 tests/search/search.c:21: `==` --> `!=`
[mut:mutant] mutant 2:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) != x);
   */
  ;
  return;
}


[mut:progress] mutant 3 tests/search/search.c:21: `<=` --> `!=`
[mut:mutant] mutant 3:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@
  assert
  found != 0 <==> (\exists integer i; 0 <= i && i != 4 && *(t+i) == x); */
  ;
  return;
}


[mut:progress] mutant 4 tests/search/search.c:21: `<=` --> `==`
[mut:mutant] mutant 4:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i == 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 5 tests/search/search.c:21: `<=` --> `>=`
[mut:mutant] mutant 5:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@
  assert
  found != 0 <==> (\exists integer i; 0 <= i && i >= 4 && *(t+i) == x); */
  ;
  return;
}


[mut:progress] mutant 6 tests/search/search.c:21: `<=` --> `>`
[mut:mutant] mutant 6:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@
  assert found != 0 <==> (\exists integer i; 0 <= i && i > 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 7 tests/search/search.c:21: `<=` --> `<`
[mut:mutant] mutant 7:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i < 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 8 tests/search/search.c:21: `<=` --> `!=`
[mut:mutant] mutant 8:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@
  assert
  found != 0 <==> (\exists integer i; 0 != i && i <= 4 && *(t+i) == x); */
  ;
  return;
}


[mut:progress] mutant 9 tests/search/search.c:21: `<=` --> `==`
[mut:mutant] mutant 9:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 == i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 10 tests/search/search.c:21: `<=` --> `>=`
[mut:mutant] mutant 10:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@
  assert
  found != 0 <==> (\exists integer i; 0 >= i && i <= 4 && *(t+i) == x); */
  ;
  return;
}


[mut:progress] mutant 11 tests/search/search.c:21: `<=` --> `>`
[mut:mutant] mutant 11:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@
  assert found != 0 <==> (\exists integer i; 0 > i && i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 12 tests/search/search.c:21: `<=` --> `<`
[mut:mutant] mutant 12:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 < i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 13 tests/search/search.c:21: `!=` --> `==`
[mut:mutant] mutant 13:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found == 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 14 tests/search/search.c:14: - assigns i
[mut:mutant] mutant 14:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 15 tests/search/search.c:14: - assigns found
[mut:mutant] mutant 15:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 16 tests/search/search.c:13: `+` --> `-`
[mut:mutant] mutant 16:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t-k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 17 tests/search/search.c:13: `==` --> `!=`
[mut:mutant] mutant 17:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) != x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 18 tests/search/search.c:13: `<` --> `!=`
[mut:mutant] mutant 18:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k && k != i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 19 tests/search/search.c:13: `<` --> `==`
[mut:mutant] mutant 19:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k == i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 20 tests/search/search.c:13: `<` --> `>=`
[mut:mutant] mutant 20:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k && k >= i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 21 tests/search/search.c:13: `<` --> `<=`
[mut:mutant] mutant 21:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k <= i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 22 tests/search/search.c:13: `<` --> `>`
[mut:mutant] mutant 22:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k && k > i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 23 tests/search/search.c:13: `<=` --> `!=`
[mut:mutant] mutant 23:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 != k && k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 24 tests/search/search.c:13: `<=` --> `==`
[mut:mutant] mutant 24:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 == k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 25 tests/search/search.c:13: `<=` --> `>=`
[mut:mutant] mutant 25:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 >= k && k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 26 tests/search/search.c:13: `<=` --> `>`
[mut:mutant] mutant 26:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 > k && k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 27 tests/search/search.c:13: `<=` --> `<`
[mut:mutant] mutant 27:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 < k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 28 tests/search/search.c:13: `!=` --> `==`
[mut:mutant] mutant 28:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found == 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 29 tests/search/search.c:13: - loop invariant found != 0 <==>
                                                                    (\exists integer k;
                                                                       0 <= k < i &&
                                                                       *(t+k) == x)
[mut:mutant] mutant 29:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop assigns found, i;
      loop invariant \true;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 30 tests/search/search.c:12: `<=` --> `!=`
[mut:mutant] mutant 30:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i && i != 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 31 tests/search/search.c:12: `<=` --> `==`
[mut:mutant] mutant 31:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i == 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 32 tests/search/search.c:12: `<=` --> `>=`
[mut:mutant] mutant 32:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i && i >= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 33 tests/search/search.c:12: `<=` --> `>`
[mut:mutant] mutant 33:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i && i > 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 34 tests/search/search.c:12: `<=` --> `<`
[mut:mutant] mutant 34:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i < 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 35 tests/search/search.c:12: `<=` --> `!=`
[mut:mutant] mutant 35:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 != i && i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 36 tests/search/search.c:12: `<=` --> `==`
[mut:mutant] mutant 36:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 == i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 37 tests/search/search.c:12: `<=` --> `>=`
[mut:mutant] mutant 37:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 >= i && i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 38 tests/search/search.c:12: `<=` --> `>`
[mut:mutant] mutant 38:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 > i && i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 39 tests/search/search.c:12: `<=` --> `<`
[mut:mutant] mutant 39:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 < i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 40 tests/search/search.c:12: - loop invariant 0 <= i <= 5
[mut:mutant] mutant 40:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
      loop invariant \true;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 41 tests/search/search.c:16: `+` --> `%`
[mut:mutant] mutant 41:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i %= 1;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 42 tests/search/search.c:16: `+` --> `/`
[mut:mutant] mutant 42:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i /= 1;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 43 tests/search/search.c:16: `+` --> `*`
[mut:mutant] mutant 43:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i *= 1;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 44 tests/search/search.c:16: `+` --> `-`
[mut:mutant] mutant 44:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) == x) found = 1;
    i --;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 45 tests/search/search.c:17: `+` --> `-`
[mut:mutant] mutant 45:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t - i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 46 tests/search/search.c:17: `==` --> `!=`
[mut:mutant] mutant 46:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (*(t + i) != x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 47 tests/search/search.c:17: `*(t + i) == x` --> `! (*(t + i) == x)`
[mut:mutant] mutant 47:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i <= 4) {
    if (! (*(t + i) == x)) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 48 tests/search/search.c:16: `<=` --> `<`
[mut:mutant] mutant 48:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i < 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 49 tests/search/search.c:16: `<=` --> `!=`
[mut:mutant] mutant 49:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i != 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 50 tests/search/search.c:16: `<=` --> `==`
[mut:mutant] mutant 50:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i == 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 51 tests/search/search.c:16: `<=` --> `>=`
[mut:mutant] mutant 51:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i >= 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 52 tests/search/search.c:16: `<=` --> `>`
[mut:mutant] mutant 52:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (i > 4) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


[mut:progress] mutant 53 tests/search/search.c:16: `i <= 4` --> `! (i <= 4)`
[mut:mutant] mutant 53:
/* Generated by Frama-C */
/*@ requires \valid(t+(0 .. 4)); */
void search(int *t, int x)
{
  int i;
  int found;
  found = 0;
  i = 0;
  /*@ loop invariant 0 <= i <= 5;
      loop invariant
        found != 0 <==> (\exists integer k; 0 <= k < i && *(t+k) == x);
      loop assigns found, i;
  */
  while (! (i <= 4)) {
    if (*(t + i) == x) found = 1;
    i ++;
  }
  /*@ assert found != 0 <==> (\exists integer i; 0 <= i <= 4 && *(t+i) == x);
   */
  ;
  return;
}


